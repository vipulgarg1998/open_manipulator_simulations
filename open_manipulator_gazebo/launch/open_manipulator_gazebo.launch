<launch>
  <!-- These are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="paused" default="true"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="dual_maipulators" default="true"/>

  <rosparam file="$(find open_manipulator_gazebo)/config/gazebo_controller.yaml" command="load" />

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find open_manipulator_gazebo)/worlds/empty.world"/>
    <arg name="debug" value="$(arg debug)" />
    <arg name="gui" value="$(arg gui)" />
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
  </include>

  <group unless="$(arg dual_maipulators)" ns="/open_manipulator">
    <!-- Load the URDF into the ROS Parameter Server -->
    <param name="robot_description"
    command="$(find xacro)/xacro --inorder '$(find open_manipulator_description)/urdf/open_manipulator.urdf.xacro'"/>

    <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
    <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
      args="-urdf -model open_manipulator -z 1.0 -R -1.57142857143 -P 1.57142857143 -param robot_description"/>

    <!-- ros_control robotis manipulator launch file -->
    <include file="$(find open_manipulator_gazebo)/launch/open_manipulator_controller.launch"/>
  </group>

  <group if="$(arg dual_maipulators)">
    <!-- Left Arm -->
    <group  ns="/left_arm">
      <!-- Load the URDF into the ROS Parameter Server -->
      <param name="robot_description"
      command="$(find xacro)/xacro --inorder '$(find open_manipulator_description)/urdf/open_manipulator.urdf.xacro'"/>

      <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
      <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model left_arm -z 1.0 -y 0.2 -R -1.57142857143 -P 1.57142857143 -param robot_description"/>

      <!-- ros_control robotis manipulator launch file -->
      <include file="$(find open_manipulator_gazebo)/launch/open_manipulator_controller.launch"/>
    </group>
    <!-- Right Arm -->
    <group  ns="/right_arm">
      <!-- Load the URDF into the ROS Parameter Server -->
      <param name="robot_description"
      command="$(find xacro)/xacro --inorder '$(find open_manipulator_description)/urdf/open_manipulator.urdf.xacro'"/>

      <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
      <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
        args="-urdf -model right_arm -z 1.0 -y -0.2 -R 1.57142857143 -P 1.57142857143 -param robot_description"/>

      <!-- ros_control robotis manipulator launch file -->
      <include file="$(find open_manipulator_gazebo)/launch/open_manipulator_controller.launch"/>
    </group>
  </group>
</launch>
